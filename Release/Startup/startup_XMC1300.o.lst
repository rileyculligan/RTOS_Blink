   1              	# 1 "../Startup/startup_XMC1300.S"
   1              	/******************************************************************************
   0              	
   0              	
   2              	 * @file     startup_XMC1300.s
   3              	 * @brief    CMSIS Core Device Startup File for
   4              	 *           Infineon XMC1300 Device Series
   5              	 * @version  V1.13
   6              	 * @date     Dec 2014
   7              	 *
   8              	 * Copyright (C) 2014 Infineon Technologies AG. All rights reserved.
   9              	 *
  10              	 *
  11              	 * @par
  12              	 * Infineon Technologies AG (Infineon) is supplying this software for use with 
  13              	 * Infineon's microcontrollers.  This file can be freely distributed
  14              	 * within development tools that are supporting such microcontrollers.
  15              	 *
  16              	 * @par
  17              	 * THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  18              	 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  19              	 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  20              	 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  21              	 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  22              	 *
  23              	 ******************************************************************************/
  24              	
  25              	/********************** Version History ***************************************
  26              	 * V1.0, Oct, 02, 2012 PKB:Startup file for XMC1  
  27              	 * V1.1, Oct, 19, 2012 PKB:ERU and MATH interrupt handlers  
  28              	 * V1.2, Nov, 02, 2012 PKB:Renamed AllowPLLInitByStartup to AllowClkInitByStartup  
  29              	 * V1.3, Dec, 11, 2012 PKB:Attributes of .XmcVeneerCode section changed  
  30              	 * V1.4, Dec, 13, 2012 PKB:Removed unwanted interrupts/veneers  
  31              	 * V1.5, Jan, 26, 2013 PKB:Corrected the SSW related entries  
  32              	 * V1.6, Feb, 13, 2013 PKB:Relative path to Device_Data.h  
  33              	 * V1.7, Feb, 19, 2013 PKB:Included XMC1100_SCU.inc
  34              	 * V1.8, Jan, 24, 2014 PKB:Removed AllowClkInitStartup and DAVE Extended init
  35              	 * V1.9, Feb, 05, 2014 PKB:Removed redundant alignment code from copy+clear funcs
  36              	 * V1.10, Feb, 14, 2014 PKB:Added software_init_hook and hardware_init_hook
  37              	 * V1.11, May, 06, 2014 JFT:__COPY_FLASH2RAM to initialize ram 
  38              	 *                          Added ram_code section initialization
  39              	 * V1.12, Sep, 29, 2014 JFT:One single default handler
  40              	 *                          Device_Data.h not included, user may use CLKVAL1_SSW
  41              	 *                          and CLKVAL2_SSW.
  42              	 *                          software_init_hook and hardware_init_hook removed
  43              	 *                          Misc optimizations
  44              	 * V1.13, Dec, 11,2014 JFT:Default clocking changed, MCLK=32MHz and PCLK=64MHz
  45              	 ******************************************************************************/
  46              	
  47              	/*****************************************************************************
  48              	 * <h> Clock system handling by SSW
  49              	 *   <h> CLK_VAL1 Configuration
  50              	 *    <o0.0..7>    FDIV Fractional Divider Selection
  51              	 *    <o0.8..15>   IDIV Divider Selection (limited to 1-16)
  52              	 *                    <0=> Divider is bypassed
  53              	 *                    <1=> MCLK = 32 MHz
  54              	 *                    <2=> MCLK = 16 MHz
  55              	 *                    <3=> MCLK = 10.67 MHz
  56              	 *                    <4=> MCLK = 8 MHz
  57              	 *                    <254=> MCLK = 126 kHz
  58              	 *                    <255=> MCLK = 125.5 kHz
  59              	 *    <o0.16>      PCLKSEL PCLK Clock Select
  60              	 *                    <0=> PCLK = MCLK
  61              	 *                    <1=> PCLK = 2 x MCLK
  62              	 *    <o0.17..19>  RTCCLKSEL RTC Clock Select
  63              	 *                    <0=> 32.768kHz standby clock
  64              	 *                    <1=> 32.768kHz external clock from ERU0.IOUT0
  65              	 *                    <2=> 32.768kHz external clock from ACMP0.OUT
  66              	 *                    <3=> 32.768kHz external clock from ACMP1.OUT
  67              	 *                    <4=> 32.768kHz external clock from ACMP2.OUT
  68              	 *                    <5=> Reserved
  69              	 *                    <6=> Reserved
  70              	 *                    <7=> Reserved
  71              	 *    <o0.31>      do not move CLK_VAL1 to SCU_CLKCR[0..19]
  72              	 *  </h>
  73              	 *****************************************************************************/
  74              	#define CLKVAL1_SSW 0x80010100
  75              	
  76              	/*****************************************************************************
  77              	 *  <h> CLK_VAL2 Configuration
  78              	 *    <o0.0>    disable VADC and SHS Gating
  79              	 *    <o0.1>    disable CCU80 Gating
  80              	 *    <o0.2>    disable CCU40 Gating
  81              	 *    <o0.3>    disable USIC0 Gating
  82              	 *    <o0.4>    disable BCCU0 Gating
  83              	 *    <o0.5>    disable LEDTS0 Gating
  84              	 *    <o0.6>    disable LEDTS1 Gating
  85              	 *    <o0.7>    disable POSIF0 Gating
  86              	 *    <o0.8>    disable MATH Gating
  87              	 *    <o0.9>    disable WDT Gating
  88              	 *    <o0.10>   disable RTC Gating
  89              	 *    <o0.31>   do not move CLK_VAL2 to SCU_CGATCLR0[0..10]
  90              	 *  </h>
  91              	 *****************************************************************************/
  92              	#define CLKVAL2_SSW 0x00000100
  93              	
  94              	/* A macro to define vector table entries */
  95              	.macro Entry Handler
  96              	    .long \Handler
  97              	.endm
  98              	
  99              	/* A couple of macros to ease definition of the various handlers */
 100              	.macro Insert_ExceptionHandler Handler_Func 
 101              	    .weak \Handler_Func
 102              	    .thumb_set \Handler_Func, Default_handler
 103              	.endm    
 104              	
 105              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
 106              	/* Vector Table - This is indirectly branched to through the veneers */
 107              	    .syntax unified   
 108              	    .cpu cortex-m0
 109              	
 110              	    .section ".reset"
 111              	    
 112              	 	.align 2
 113              	    
 114              	    .globl  __Vectors
 116              	__Vectors:
 117 0000 00000000 	    .long   __initial_sp                /* Top of Stack                 */
 118 0004 00000000 	    .long   Reset_Handler               /* Reset Handler                */
 119              	/* 
 120              	 * All entries below are redundant for M0, but are retained because they can
 121              	 * in the future be directly ported to M0 Plus devices.
 122              	 */
 123 0008 00000000 	    .long   0                           /* Reserved                     */
 124 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
 125 0010 00010180 	    .long   CLKVAL1_SSW                 /* Reserved                     */
 126 0014 00010000 	    .long   CLKVAL2_SSW                 /* Reserved                     */
 127              	#ifdef RETAIN_VECTOR_TABLE
 128              	    .long   0                           /* Reserved                     */
 129              	    .long   0                           /* Reserved                     */
 130              	    .long   0                           /* Reserved                     */
 131              	    .long   0                           /* Reserved                     */
 132              	    .long   0                           /* Reserved                     */
 133              	    Entry   SVC_Handler                 /* SVCall Handler               */
 134              	    .long   0                           /* Reserved                     */
 135              	    .long   0                           /* Reserved                     */
 136              	    Entry   PendSV_Handler              /* PendSV Handler               */
 137              	    Entry   SysTick_Handler             /* SysTick Handler              */
 138              	
 139              	    /* Interrupt Handlers for Service Requests (SR) from XMC1300 Peripherals */
 140              	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 141              	    Entry   SCU_1_IRQHandler            /* Handler name for SR SCU_1     */
 142              	    Entry   SCU_2_IRQHandler            /* Handler name for SR SCU_2     */
 143              	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 144              	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 145              	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 146              	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */
 147              	    Entry   MATH0_0_IRQHandler          /* Handler name for SR MATH0_0   */
 148              	    .long   0                           /* Not Available                 */
 149              	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 150              	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 151              	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 152              	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 153              	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 154              	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 155              	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 156              	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 157              	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 158              	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 159              	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 160              	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 161              	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 162              	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 163              	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 164              	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 165              	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 166              	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 167              	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 168              	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 169              	    .long   0                           /* Not Available                 */
 170              	    .long   0                           /* Not Available                 */
 171              	    Entry   BCCU0_0_IRQHandler          /* Handler name for SR BCCU0_0  */
 172              	#endif
 173              	
 175              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 176              	
 177              	/* ================== START OF VECTOR ROUTINES ============================= */
 178              	
 179              	    .thumb 
 180              		.align 1
 181              	 
 182              	/* Reset Handler */
 183              	    .thumb_func 
 184              	    .globl  Reset_Handler
 186              	Reset_Handler: 
 187              	/* Initialize interrupt veneer */
 188 0018 1149     		ldr	r1, =eROData
 189 001a 124A     		ldr	r2, =VeneerStart
 190 001c 124B     		ldr	r3, =VeneerEnd
 191 001e 00F018F8 		bl  __copy_data
 192              	
 193 0022 1248     	    ldr  r0, =SystemInit
 194 0024 8047     	    blx  r0
 195              		
 196              	/* Initialize data */
 197 0026 1249     		ldr	r1, =DataLoadAddr
 198 0028 124A     		ldr	r2, =__data_start
 199 002a 134B     		ldr	r3, =__data_end
 200 002c 00F011F8 		bl  __copy_data
 201              	
 202              	/* RAM code */
 203 0030 1249     		ldr	r1, =__ram_code_load
 204 0032 134A     		ldr	r2, =__ram_code_start
 205 0034 134B     		ldr	r3, =__ram_code_end
 206 0036 00F00CF8 		bl  __copy_data
 207              	
 208              	/*  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 209              	 *  The BSS section is specified by following symbols
 210              	 *    __bss_start__: start of the BSS section.
 211              	 *    __bss_end__: end of the BSS section.
 212              	 *
 213              	 *  Both addresses must be aligned to 4 bytes boundary.
 214              	 */
 215              	#ifndef __SKIP_BSS_CLEAR
 216 003a 1349     		ldr	r1, =__bss_start
 217 003c 134A     		ldr	r2, =__bss_end
 218              	
 219 003e 0020     		movs	r0, 0
 220              	
 221 0040 521A     		subs	r2, r1
 222 0042 02DD     		ble	.L_loop3_done
 223              	
 224              	.L_loop3:
 225 0044 043A     		subs	r2, #4
 226 0046 8850     		str	r0, [r1, r2]
 227 0048 FCDC     		bgt	.L_loop3
 228              	.L_loop3_done:
 229              	#endif /* __SKIP_BSS_CLEAR */
 230              	
 231              	#ifndef __SKIP_LIBC_INIT_ARRAY
 232 004a 1148     	    ldr  r0, =__libc_init_array
 233 004c 8047     	    blx  r0
 234              	#endif
 235              	
 236 004e 1148     	    ldr  r0, =main
 237 0050 8047     	    blx  r0
 238              	
 239              	    .thumb_func
 241              	__copy_data:
 242              	/*  The ranges of copy from/to are specified by following symbols
 243              	 *    r1: start of the section to copy from.
 244              	 *    r2: start of the section to copy to
 245              	 *    r3: end of the section to copy to
 246              	 *
 247              	 *  All addresses must be aligned to 4 bytes boundary.
 248              	 *  Uses r0
 249              	 */
 250 0052 9B1A     		subs	r3, r2
 251 0054 03DD     		ble	.L_loop_done
 252              	
 253              	.L_loop:
 254 0056 043B     		subs	r3, #4
 255 0058 C858     		ldr	r0, [r1,r3]
 256 005a D050     		str	r0, [r2,r3]
 257 005c FBDC     		bgt	.L_loop
 258              	
 259              	.L_loop_done:
 260 005e 7047     		bx  lr
 261              	
 262 0060 00000000 		.pool
 262      00000000 
 262      00000000 
 262      00000000 
 262      00000000 
 264              	/* ======================================================================== */
 265              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 266              	
 267              		.align 1
 268              	    
 269              	    .thumb_func
 270              	    .weak Default_handler
 272              	Default_handler:
 273 0098 FEE7     	    b  .
 275              	
 276              	    Insert_ExceptionHandler HardFault_Handler
 277              	    Insert_ExceptionHandler SVC_Handler
 278              	    Insert_ExceptionHandler PendSV_Handler
 279              	    Insert_ExceptionHandler SysTick_Handler
 280              	
 281              	    Insert_ExceptionHandler SCU_0_IRQHandler
 282              	    Insert_ExceptionHandler SCU_1_IRQHandler
 283              	    Insert_ExceptionHandler SCU_2_IRQHandler
 284              	    Insert_ExceptionHandler ERU0_0_IRQHandler
 285              	    Insert_ExceptionHandler ERU0_1_IRQHandler
 286              	    Insert_ExceptionHandler ERU0_2_IRQHandler
 287              	    Insert_ExceptionHandler ERU0_3_IRQHandler
 288              	    Insert_ExceptionHandler MATH0_0_IRQHandler
 289              	    Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 290              	    Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 291              	    Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 292              	    Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 293              	    Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 294              	    Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 295              	    Insert_ExceptionHandler CCU40_0_IRQHandler
 296              	    Insert_ExceptionHandler CCU40_1_IRQHandler
 297              	    Insert_ExceptionHandler CCU40_2_IRQHandler
 298              	    Insert_ExceptionHandler CCU40_3_IRQHandler
 299              	    Insert_ExceptionHandler CCU80_0_IRQHandler
 300              	    Insert_ExceptionHandler CCU80_1_IRQHandler
 301              	    Insert_ExceptionHandler POSIF0_0_IRQHandler
 302              	    Insert_ExceptionHandler POSIF0_1_IRQHandler
 303              	    Insert_ExceptionHandler USIC0_0_IRQHandler
 304              	    Insert_ExceptionHandler USIC0_1_IRQHandler
 305              	    Insert_ExceptionHandler USIC0_2_IRQHandler
 306              	    Insert_ExceptionHandler USIC0_3_IRQHandler
 307              	    Insert_ExceptionHandler USIC0_4_IRQHandler
 308              	    Insert_ExceptionHandler USIC0_5_IRQHandler
 309              	    Insert_ExceptionHandler BCCU0_0_IRQHandler
 310              	   
 311              	/* ======================================================================== */
 312              	
 313              	/* ==================VENEERS VENEERS VENEERS VENEERS VENEERS=============== */
 314 009a 0000     	    .section ".XmcVeneerCode","ax",%progbits
 315              	    
 316              	    .align 1
 317              	    
 318              	    .globl HardFault_Veneer
 319              	HardFault_Veneer:
 320 0000 2C48     	    LDR R0, =HardFault_Handler
 321 0002 8746     	    MOV PC,R0
 322 0004 00000000 	    .long 0
 323 0008 00000000 	    .long 0
 324 000c 00000000 	    .long 0
 325 0010 00000000 	    .long 0
 326 0014 00000000 	    .long 0
 327 0018 00000000 	    .long 0
 328 001c 00000000 	    .long 0
 329              	/* ======================================================================== */
 330              	    .globl SVC_Veneer
 331              	SVC_Veneer:
 332 0020 2548     	    LDR R0, =SVC_Handler
 333 0022 8746     	    MOV PC,R0
 334 0024 00000000 	    .long 0
 335 0028 00000000 	    .long 0
 336              	/* ======================================================================== */
 337              	    .globl PendSV_Veneer
 338              	PendSV_Veneer:
 339 002c 2348     	    LDR R0, =PendSV_Handler
 340 002e 8746     	    MOV PC,R0
 341              	/* ======================================================================== */
 342              	    .globl SysTick_Veneer 
 343              	SysTick_Veneer:
 344 0030 2348     	    LDR R0, =SysTick_Handler
 345 0032 8746     	    MOV PC,R0
 346              	/* ======================================================================== */
 347              	    .globl SCU_0_Veneer 
 348              	SCU_0_Veneer:
 349 0034 2348     	    LDR R0, =SCU_0_IRQHandler
 350 0036 8746     	    MOV PC,R0
 351              	/* ======================================================================== */
 352              	    .globl SCU_1_Veneer 
 353              	SCU_1_Veneer:
 354 0038 2348     	    LDR R0, =SCU_1_IRQHandler
 355 003a 8746     	    MOV PC,R0
 356              	/* ======================================================================== */
 357              	    .globl SCU_2_Veneer
 358              	SCU_2_Veneer:
 359 003c 2348     	    LDR R0, =SCU_2_IRQHandler
 360 003e 8746     	    MOV PC,R0
 361              	/* ======================================================================== */
 362              	    .globl SCU_3_Veneer 
 363              	SCU_3_Veneer:
 364 0040 2348     	    LDR R0, =ERU0_0_IRQHandler
 365 0042 8746     	    MOV PC,R0
 366              	/* ======================================================================== */
 367              	    .globl SCU_4_Veneer 
 368              	SCU_4_Veneer:
 369 0044 2348     	    LDR R0, =ERU0_1_IRQHandler
 370 0046 8746     	    MOV PC,R0
 371              	/* ======================================================================== */
 372              	    .globl SCU_5_Veneer 
 373              	SCU_5_Veneer:
 374 0048 2348     	    LDR R0, =ERU0_2_IRQHandler
 375 004a 8746     	    MOV PC,R0
 376              	/* ======================================================================== */
 377              	    .globl SCU_6_Veneer 
 378              	SCU_6_Veneer:
 379 004c 2348     	    LDR R0, =ERU0_3_IRQHandler
 380 004e 8746     	    MOV PC,R0
 381              	/* ======================================================================== */
 382              	    .globl MATH_Veneer 
 383              	MATH_Veneer:
 384 0050 2348     	    LDR R0, =MATH0_0_IRQHandler
 385 0052 8746     	    MOV PC,R0
 386 0054 00000000 	    .long 0
 387              	/* ======================================================================== */
 388              	    .globl USIC0_0_Veneer
 389              	USIC0_0_Veneer:
 390 0058 2248     	    LDR R0, =USIC0_0_IRQHandler
 391 005a 8746     	    MOV PC,R0
 392              	/* ======================================================================== */
 393              	    .globl USIC0_1_Veneer
 394              	USIC0_1_Veneer:
 395 005c 2248     	    LDR R0, =USIC0_1_IRQHandler
 396 005e 8746     	    MOV PC,R0
 397              	/* ======================================================================== */
 398              	    .globl USIC0_2_Veneer
 399              	USIC0_2_Veneer:
 400 0060 2248     	    LDR R0, =USIC0_2_IRQHandler
 401 0062 8746     	    MOV PC,R0
 402              	/* ======================================================================== */
 403              	    .globl USIC0_3_Veneer
 404              	USIC0_3_Veneer:
 405 0064 2248     	    LDR R0, =USIC0_3_IRQHandler
 406 0066 8746     	    MOV PC,R0
 407              	/* ======================================================================== */
 408              	    .globl USIC0_4_Veneer
 409              	USIC0_4_Veneer:
 410 0068 2248     	    LDR R0, =USIC0_4_IRQHandler
 411 006a 8746     	    MOV PC,R0
 412              	/* ======================================================================== */
 413              	    .globl USIC0_5_Veneer
 414              	USIC0_5_Veneer:
 415 006c 2248     	    LDR R0, =USIC0_5_IRQHandler
 416 006e 8746     	    MOV PC,R0
 417              	/* ======================================================================== */
 418              	    .globl VADC0_C0_0_Veneer 
 419              	VADC0_C0_0_Veneer:
 420 0070 2248     	    LDR R0, =VADC0_C0_0_IRQHandler
 421 0072 8746     	    MOV PC,R0
 422              	/* ======================================================================== */
 423              	    .globl VADC0_C0_1_Veneer
 424              	VADC0_C0_1_Veneer:
 425 0074 2248     	    LDR R0, =VADC0_C0_1_IRQHandler
 426 0076 8746     	    MOV PC,R0
 427              	/* ======================================================================== */
 428              	    .globl VADC0_G0_0_Veneer
 429              	VADC0_G0_0_Veneer:
 430 0078 2248     	    LDR R0, =VADC0_G0_0_IRQHandler
 431 007a 8746     	    MOV PC,R0
 432              	/* ======================================================================== */
 433              	    .globl VADC0_G0_1_Veneer
 434              	VADC0_G0_1_Veneer:
 435 007c 2248     	    LDR R0, =VADC0_G0_1_IRQHandler
 436 007e 8746     	    MOV PC,R0
 437              	/* ======================================================================== */
 438              	    .globl VADC0_G1_0_Veneer
 439              	VADC0_G1_0_Veneer:
 440 0080 2248     	    LDR R0, =VADC0_G1_0_IRQHandler
 441 0082 8746     	    MOV PC,R0
 442              	/* ======================================================================== */
 443              	    .globl VADC0_G1_1_Veneer
 444              	VADC0_G1_1_Veneer:
 445 0084 2248     	    LDR R0, =VADC0_G1_1_IRQHandler
 446 0086 8746     	    MOV PC,R0
 447              	/* ======================================================================== */
 448              	    .globl CCU40_0_Veneer
 449              	CCU40_0_Veneer:
 450 0088 2248     	    LDR R0, =CCU40_0_IRQHandler
 451 008a 8746     	    MOV PC,R0
 452              	/* ======================================================================== */
 453              	    .globl CCU40_1_Veneer
 454              	CCU40_1_Veneer:
 455 008c 2248     	    LDR R0, =CCU40_1_IRQHandler
 456 008e 8746     	    MOV PC,R0
 457              	/* ======================================================================== */
 458              	    .globl CCU40_2_Veneer
 459              	CCU40_2_Veneer:
 460 0090 2248     	    LDR R0, =CCU40_2_IRQHandler
 461 0092 8746     	    MOV PC,R0
 462              	/* ======================================================================== */
 463              	    .globl CCU40_3_Veneer
 464              	CCU40_3_Veneer:
 465 0094 2248     	    LDR R0, =CCU40_3_IRQHandler
 466 0096 8746     	    MOV PC,R0
 467              	/* ======================================================================== */
 468              	    .globl CCU80_0_Veneer
 469              	CCU80_0_Veneer:
 470 0098 2248     	    LDR R0, =CCU80_0_IRQHandler
 471 009a 8746     	    MOV PC,R0
 472              	/* ======================================================================== */
 473              	    .globl CCU80_1_Veneer
 474              	CCU80_1_Veneer:
 475 009c 2248     	    LDR R0, =CCU80_1_IRQHandler
 476 009e 8746     	    MOV PC,R0
 477              	/* ======================================================================== */
 478              	    .globl POSIF0_0_Veneer
 479              	POSIF0_0_Veneer:
 480 00a0 2248     	    LDR R0, =POSIF0_0_IRQHandler
 481 00a2 8746     	    MOV PC,R0
 482              	/* ======================================================================== */
 483              	    .globl POSIF0_1_Veneer
 484              	POSIF0_1_Veneer:
 485 00a4 2248     	    LDR R0, =POSIF0_1_IRQHandler
 486 00a6 8746     	    MOV PC,R0
 487 00a8 00000000 	    .long 0
 488 00ac 00000000 	    .long 0
 489              	/* ======================================================================== */
 490              	    .globl BCCU0_0_Veneer
 491              	BCCU0_0_Veneer:
 492 00b0 2048     	    LDR R0, =BCCU0_0_IRQHandler
 493 00b2 8746     	    MOV PC,R0
 494              	
 495              	/* ======================================================================== */
 496              	/* ======================================================================== */
 497              	
 498              	/* ============= END OF INTERRUPT HANDLER DEFINITION ======================== */
 499              	
 500 00b4 00000000 	    .end
 500      00000000 
 500      00000000 
 500      00000000 
 500      00000000 
DEFINED SYMBOLS
../Startup/startup_XMC1300.S:112    .reset:00000000 $d
../Startup/startup_XMC1300.S:116    .reset:00000000 __Vectors
../Startup/startup_XMC1300.S:186    .reset:00000018 Reset_Handler
../Startup/startup_XMC1300.S:272    .reset:00000098 HardFault_Handler
../Startup/startup_XMC1300.S:188    .reset:00000018 $t
../Startup/startup_XMC1300.S:241    .reset:00000052 __copy_data
../Startup/startup_XMC1300.S:262    .reset:00000060 $d
../Startup/startup_XMC1300.S:272    .reset:00000098 Default_handler
../Startup/startup_XMC1300.S:273    .reset:00000098 $t
../Startup/startup_XMC1300.S:272    .reset:00000098 SVC_Handler
../Startup/startup_XMC1300.S:272    .reset:00000098 PendSV_Handler
../Startup/startup_XMC1300.S:272    .reset:00000098 SysTick_Handler
../Startup/startup_XMC1300.S:272    .reset:00000098 SCU_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 SCU_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 SCU_2_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 ERU0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 ERU0_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 ERU0_2_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 ERU0_3_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 MATH0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_C0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_C0_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_G0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_G0_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_G1_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 VADC0_G1_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU40_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU40_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU40_2_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU40_3_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU80_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 CCU80_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 POSIF0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 POSIF0_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_0_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_1_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_2_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_3_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_4_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 USIC0_5_IRQHandler
../Startup/startup_XMC1300.S:272    .reset:00000098 BCCU0_0_IRQHandler
../Startup/startup_XMC1300.S:316    .XmcVeneerCode:00000000 $t
../Startup/startup_XMC1300.S:319    .XmcVeneerCode:00000000 HardFault_Veneer
../Startup/startup_XMC1300.S:322    .XmcVeneerCode:00000004 $d
../Startup/startup_XMC1300.S:331    .XmcVeneerCode:00000020 SVC_Veneer
../Startup/startup_XMC1300.S:332    .XmcVeneerCode:00000020 $t
../Startup/startup_XMC1300.S:334    .XmcVeneerCode:00000024 $d
../Startup/startup_XMC1300.S:338    .XmcVeneerCode:0000002c PendSV_Veneer
../Startup/startup_XMC1300.S:339    .XmcVeneerCode:0000002c $t
../Startup/startup_XMC1300.S:343    .XmcVeneerCode:00000030 SysTick_Veneer
../Startup/startup_XMC1300.S:348    .XmcVeneerCode:00000034 SCU_0_Veneer
../Startup/startup_XMC1300.S:353    .XmcVeneerCode:00000038 SCU_1_Veneer
../Startup/startup_XMC1300.S:358    .XmcVeneerCode:0000003c SCU_2_Veneer
../Startup/startup_XMC1300.S:363    .XmcVeneerCode:00000040 SCU_3_Veneer
../Startup/startup_XMC1300.S:368    .XmcVeneerCode:00000044 SCU_4_Veneer
../Startup/startup_XMC1300.S:373    .XmcVeneerCode:00000048 SCU_5_Veneer
../Startup/startup_XMC1300.S:378    .XmcVeneerCode:0000004c SCU_6_Veneer
../Startup/startup_XMC1300.S:383    .XmcVeneerCode:00000050 MATH_Veneer
../Startup/startup_XMC1300.S:386    .XmcVeneerCode:00000054 $d
../Startup/startup_XMC1300.S:389    .XmcVeneerCode:00000058 USIC0_0_Veneer
../Startup/startup_XMC1300.S:390    .XmcVeneerCode:00000058 $t
../Startup/startup_XMC1300.S:394    .XmcVeneerCode:0000005c USIC0_1_Veneer
../Startup/startup_XMC1300.S:399    .XmcVeneerCode:00000060 USIC0_2_Veneer
../Startup/startup_XMC1300.S:404    .XmcVeneerCode:00000064 USIC0_3_Veneer
../Startup/startup_XMC1300.S:409    .XmcVeneerCode:00000068 USIC0_4_Veneer
../Startup/startup_XMC1300.S:414    .XmcVeneerCode:0000006c USIC0_5_Veneer
../Startup/startup_XMC1300.S:419    .XmcVeneerCode:00000070 VADC0_C0_0_Veneer
../Startup/startup_XMC1300.S:424    .XmcVeneerCode:00000074 VADC0_C0_1_Veneer
../Startup/startup_XMC1300.S:429    .XmcVeneerCode:00000078 VADC0_G0_0_Veneer
../Startup/startup_XMC1300.S:434    .XmcVeneerCode:0000007c VADC0_G0_1_Veneer
../Startup/startup_XMC1300.S:439    .XmcVeneerCode:00000080 VADC0_G1_0_Veneer
../Startup/startup_XMC1300.S:444    .XmcVeneerCode:00000084 VADC0_G1_1_Veneer
../Startup/startup_XMC1300.S:449    .XmcVeneerCode:00000088 CCU40_0_Veneer
../Startup/startup_XMC1300.S:454    .XmcVeneerCode:0000008c CCU40_1_Veneer
../Startup/startup_XMC1300.S:459    .XmcVeneerCode:00000090 CCU40_2_Veneer
../Startup/startup_XMC1300.S:464    .XmcVeneerCode:00000094 CCU40_3_Veneer
../Startup/startup_XMC1300.S:469    .XmcVeneerCode:00000098 CCU80_0_Veneer
../Startup/startup_XMC1300.S:474    .XmcVeneerCode:0000009c CCU80_1_Veneer
../Startup/startup_XMC1300.S:479    .XmcVeneerCode:000000a0 POSIF0_0_Veneer
../Startup/startup_XMC1300.S:484    .XmcVeneerCode:000000a4 POSIF0_1_Veneer
../Startup/startup_XMC1300.S:487    .XmcVeneerCode:000000a8 $d
../Startup/startup_XMC1300.S:491    .XmcVeneerCode:000000b0 BCCU0_0_Veneer
../Startup/startup_XMC1300.S:492    .XmcVeneerCode:000000b0 $t
../Startup/startup_XMC1300.S:500    .XmcVeneerCode:000000b4 $d
../Startup/startup_XMC1300.S:314    .reset:0000009a $d

UNDEFINED SYMBOLS
__initial_sp
eROData
VeneerStart
VeneerEnd
SystemInit
DataLoadAddr
__data_start
__data_end
__ram_code_load
__ram_code_start
__ram_code_end
__bss_start
__bss_end
__libc_init_array
main

   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ccu8.c"
  14              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
  15              	 .align 1
  16              	 .global XMC_CCU8_SetModuleClock
  17              	 .code 16
  18              	 .thumb_func
  20              	XMC_CCU8_SetModuleClock:
  21 0000 3022     	 mov r2,#48
  22 0002 0368     	 ldr r3,[r0]
  23 0004 0901     	 lsl r1,r1,#4
  24 0006 9343     	 bic r3,r2
  25 0008 1943     	 orr r1,r3
  26 000a 0160     	 str r1,[r0]
  27              	 
  28 000c 7047     	 bx lr
  30              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
  31              	 .align 1
  32              	 .global XMC_CCU8_SLICE_CompareInit
  33              	 .code 16
  34              	 .thumb_func
  36              	XMC_CCU8_SLICE_CompareInit:
  37 0000 0122     	 mov r2,#1
  38 0002 0369     	 ldr r3,[r0,#16]
  39              	 
  40 0004 1343     	 orr r3,r2
  41 0006 0361     	 str r3,[r0,#16]
  42 0008 0B68     	 ldr r3,[r1]
  43 000a 1332     	 add r2,r2,#19
  44 000c 4361     	 str r3,[r0,#20]
  45 000e 4B7B     	 ldrb r3,[r1,#13]
  46 0010 DB06     	 lsl r3,r3,#27
  47 0012 DB0F     	 lsr r3,r3,#31
  48 0014 1B05     	 lsl r3,r3,#20
  49 0016 4360     	 str r3,[r0,#4]
  50 0018 0B7B     	 ldrb r3,[r1,#12]
  51 001a 1B07     	 lsl r3,r3,#28
  52 001c 1B0F     	 lsr r3,r3,#28
  53 001e 4362     	 str r3,[r0,#36]
  54 0020 0B7B     	 ldrb r3,[r1,#12]
  55 0022 1B09     	 lsr r3,r3,#4
  56 0024 C362     	 str r3,[r0,#44]
  57 0026 4B7B     	 ldrb r3,[r1,#13]
  58 0028 1B07     	 lsl r3,r3,#28
  59 002a 1B0F     	 lsr r3,r3,#28
  60 002c 0362     	 str r3,[r0,#32]
  61 002e 4B68     	 ldr r3,[r1,#4]
  62 0030 8361     	 str r3,[r0,#24]
  63 0032 8B68     	 ldr r3,[r1,#8]
  64 0034 5340     	 eor r3,r2
  65 0036 8364     	 str r3,[r0,#72]
  66 0038 7047     	 bx lr
  68              	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
  69              	 .align 1
  70              	 .global XMC_CCU8_SLICE_CaptureInit
  71              	 .code 16
  72              	 .thumb_func
  74              	XMC_CCU8_SLICE_CaptureInit:
  75 0000 0122     	 mov r2,#1
  76 0002 0369     	 ldr r3,[r0,#16]
  77              	 
  78 0004 1343     	 orr r3,r2
  79 0006 0361     	 str r3,[r0,#16]
  80 0008 0B68     	 ldr r3,[r1]
  81 000a 4361     	 str r3,[r0,#20]
  82 000c 4B79     	 ldrb r3,[r1,#5]
  83 000e DB07     	 lsl r3,r3,#31
  84 0010 DB0F     	 lsr r3,r3,#31
  85 0012 DBB2     	 uxtb r3,r3
  86 0014 1B05     	 lsl r3,r3,#20
  87 0016 4360     	 str r3,[r0,#4]
  88 0018 0B79     	 ldrb r3,[r1,#4]
  89 001a 1B09     	 lsr r3,r3,#4
  90 001c C362     	 str r3,[r0,#44]
  91 001e 0B79     	 ldrb r3,[r1,#4]
  92 0020 1B07     	 lsl r3,r3,#28
  93 0022 1B0F     	 lsr r3,r3,#28
  94 0024 4362     	 str r3,[r0,#36]
  95 0026 7047     	 bx lr
  97              	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
  98              	 .align 1
  99              	 .global XMC_CCU8_SLICE_SetOutPath
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_CCU8_SLICE_SetOutPath:
 104 0000 836C     	 ldr r3,[r0,#72]
 105 0002 0A0C     	 lsr r2,r1,#16
 106 0004 9343     	 bic r3,r2
 107 0006 89B2     	 uxth r1,r1
 108 0008 1943     	 orr r1,r3
 109 000a 8164     	 str r1,[r0,#72]
 110              	 
 111 000c 7047     	 bx lr
 113              	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 114              	 .align 1
 115              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 116              	 .code 16
 117              	 .thumb_func
 119              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 120 0000 0368     	 ldr r3,[r0]
 121 0002 0A0C     	 lsr r2,r1,#16
 122 0004 9343     	 bic r3,r2
 123 0006 89B2     	 uxth r1,r1
 124 0008 1943     	 orr r1,r3
 125 000a 0160     	 str r1,[r0]
 126              	 
 127 000c 7047     	 bx lr
 129              	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 130              	 .align 1
 131              	 .global XMC_CCU8_SLICE_StartConfig
 132              	 .code 16
 133              	 .thumb_func
 135              	XMC_CCU8_SLICE_StartConfig:
 136 0000 10B5     	 push {r4,lr}
 137 0002 0324     	 mov r4,#3
 138 0004 4368     	 ldr r3,[r0,#4]
 139 0006 A343     	 bic r3,r4
 140 0008 1943     	 orr r1,r3
 141 000a 4160     	 str r1,[r0,#4]
 142 000c 4369     	 ldr r3,[r0,#20]
 143 000e 012A     	 cmp r2,#1
 144 0010 03D1     	 bne .L7
 145 0012 8022     	 mov r2,#128
 146 0014 D200     	 lsl r2,r2,#3
 147 0016 1343     	 orr r3,r2
 148 0018 01E0     	 b .L8
 149              	.L7:
 150 001a 024A     	 ldr r2,.L10
 151 001c 1340     	 and r3,r2
 152              	.L8:
 153 001e 4361     	 str r3,[r0,#20]
 154              	 
 155 0020 10BD     	 pop {r4,pc}
 156              	.L11:
 157 0022 C046     	 .align 2
 158              	.L10:
 159 0024 FFFBFFFF 	 .word -1025
 161              	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 162              	 .align 1
 163              	 .global XMC_CCU8_SLICE_StopConfig
 164              	 .code 16
 165              	 .thumb_func
 167              	XMC_CCU8_SLICE_StopConfig:
 168 0000 10B5     	 push {r4,lr}
 169 0002 0C24     	 mov r4,#12
 170 0004 4368     	 ldr r3,[r0,#4]
 171 0006 8900     	 lsl r1,r1,#2
 172 0008 A343     	 bic r3,r4
 173 000a 1943     	 orr r1,r3
 174 000c 4160     	 str r1,[r0,#4]
 175 000e 4169     	 ldr r1,[r0,#20]
 176 0010 024B     	 ldr r3,.L13
 177 0012 1202     	 lsl r2,r2,#8
 178 0014 0B40     	 and r3,r1
 179 0016 1A43     	 orr r2,r3
 180 0018 4261     	 str r2,[r0,#20]
 181              	 
 182 001a 10BD     	 pop {r4,pc}
 183              	.L14:
 184              	 .align 2
 185              	.L13:
 186 001c FFFCFFFF 	 .word -769
 188              	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 189              	 .align 1
 190              	 .global XMC_CCU8_SLICE_LoadConfig
 191              	 .code 16
 192              	 .thumb_func
 194              	XMC_CCU8_SLICE_LoadConfig:
 195 0000 4268     	 ldr r2,[r0,#4]
 196 0002 034B     	 ldr r3,.L16
 197 0004 0903     	 lsl r1,r1,#12
 198 0006 1340     	 and r3,r2
 199 0008 1943     	 orr r1,r3
 200 000a 4160     	 str r1,[r0,#4]
 201              	 
 202 000c 7047     	 bx lr
 203              	.L17:
 204 000e C046     	 .align 2
 205              	.L16:
 206 0010 FFCFFFFF 	 .word -12289
 208              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 209              	 .align 1
 210              	 .global XMC_CCU8_SLICE_LoadSelector
 211              	 .code 16
 212              	 .thumb_func
 214              	XMC_CCU8_SLICE_LoadSelector:
 215 0000 8022     	 mov r2,#128
 216 0002 4369     	 ldr r3,[r0,#20]
 217 0004 C901     	 lsl r1,r1,#7
 218 0006 9343     	 bic r3,r2
 219 0008 1943     	 orr r1,r3
 220 000a 4161     	 str r1,[r0,#20]
 221              	 
 222 000c 7047     	 bx lr
 224              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 225              	 .align 1
 226              	 .global XMC_CCU8_SLICE_ModulationConfig
 227              	 .code 16
 228              	 .thumb_func
 230              	XMC_CCU8_SLICE_ModulationConfig:
 231 0000 70B5     	 push {r4,r5,r6,lr}
 232 0002 04AC     	 add r4,sp,#16
 233 0004 4668     	 ldr r6,[r0,#4]
 234 0006 2578     	 ldrb r5,[r4]
 235 0008 0D4C     	 ldr r4,.L24
 236 000a 8904     	 lsl r1,r1,#18
 237 000c 3440     	 and r4,r6
 238 000e 2143     	 orr r1,r4
 239 0010 4160     	 str r1,[r0,#4]
 240 0012 4169     	 ldr r1,[r0,#20]
 241 0014 012A     	 cmp r2,#1
 242 0016 03D1     	 bne .L20
 243 0018 8022     	 mov r2,#128
 244 001a 5204     	 lsl r2,r2,#17
 245 001c 0A43     	 orr r2,r1
 246 001e 01E0     	 b .L21
 247              	.L20:
 248 0020 084A     	 ldr r2,.L24+4
 249 0022 0A40     	 and r2,r1
 250              	.L21:
 251 0024 002D     	 cmp r5,#0
 252 0026 03D0     	 beq .L22
 253 0028 8021     	 mov r1,#128
 254 002a 0904     	 lsl r1,r1,#16
 255 002c 0A43     	 orr r2,r1
 256 002e 01E0     	 b .L23
 257              	.L22:
 258 0030 0549     	 ldr r1,.L24+8
 259 0032 0A40     	 and r2,r1
 260              	.L23:
 261 0034 0549     	 ldr r1,.L24+12
 262 0036 DB06     	 lsl r3,r3,#27
 263 0038 0A40     	 and r2,r1
 264 003a 1A43     	 orr r2,r3
 265 003c 4261     	 str r2,[r0,#20]
 266              	 
 267 003e 70BD     	 pop {r4,r5,r6,pc}
 268              	.L25:
 269              	 .align 2
 270              	.L24:
 271 0040 FFFFF3FF 	 .word -786433
 272 0044 FFFFFFFE 	 .word -16777217
 273 0048 FFFF7FFF 	 .word -8388609
 274 004c FFFFFFE7 	 .word -402653185
 276              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 277              	 .align 1
 278              	 .global XMC_CCU8_SLICE_CountConfig
 279              	 .code 16
 280              	 .thumb_func
 282              	XMC_CCU8_SLICE_CountConfig:
 283 0000 4268     	 ldr r2,[r0,#4]
 284 0002 034B     	 ldr r3,.L27
 285 0004 8903     	 lsl r1,r1,#14
 286 0006 1340     	 and r3,r2
 287 0008 1943     	 orr r1,r3
 288 000a 4160     	 str r1,[r0,#4]
 289              	 
 290 000c 7047     	 bx lr
 291              	.L28:
 292 000e C046     	 .align 2
 293              	.L27:
 294 0010 FF3FFFFF 	 .word -49153
 296              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 297              	 .align 1
 298              	 .global XMC_CCU8_SLICE_GateConfig
 299              	 .code 16
 300              	 .thumb_func
 302              	XMC_CCU8_SLICE_GateConfig:
 303 0000 4268     	 ldr r2,[r0,#4]
 304 0002 034B     	 ldr r3,.L30
 305 0004 0902     	 lsl r1,r1,#8
 306 0006 1340     	 and r3,r2
 307 0008 1943     	 orr r1,r3
 308 000a 4160     	 str r1,[r0,#4]
 309              	 
 310 000c 7047     	 bx lr
 311              	.L31:
 312 000e C046     	 .align 2
 313              	.L30:
 314 0010 FFFCFFFF 	 .word -769
 316              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 317              	 .align 1
 318              	 .global XMC_CCU8_SLICE_Capture0Config
 319              	 .code 16
 320              	 .thumb_func
 322              	XMC_CCU8_SLICE_Capture0Config:
 323 0000 3022     	 mov r2,#48
 324 0002 4368     	 ldr r3,[r0,#4]
 325 0004 0901     	 lsl r1,r1,#4
 326 0006 9343     	 bic r3,r2
 327 0008 1943     	 orr r1,r3
 328 000a 4160     	 str r1,[r0,#4]
 329              	 
 330 000c 7047     	 bx lr
 332              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 333              	 .align 1
 334              	 .global XMC_CCU8_SLICE_Capture1Config
 335              	 .code 16
 336              	 .thumb_func
 338              	XMC_CCU8_SLICE_Capture1Config:
 339 0000 C022     	 mov r2,#192
 340 0002 4368     	 ldr r3,[r0,#4]
 341 0004 8901     	 lsl r1,r1,#6
 342 0006 9343     	 bic r3,r2
 343 0008 1943     	 orr r1,r3
 344 000a 4160     	 str r1,[r0,#4]
 345              	 
 346 000c 7047     	 bx lr
 348              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 349              	 .align 1
 350              	 .global XMC_CCU8_SLICE_DirectionConfig
 351              	 .code 16
 352              	 .thumb_func
 354              	XMC_CCU8_SLICE_DirectionConfig:
 355 0000 4268     	 ldr r2,[r0,#4]
 356 0002 034B     	 ldr r3,.L35
 357 0004 8902     	 lsl r1,r1,#10
 358 0006 1340     	 and r3,r2
 359 0008 1943     	 orr r1,r3
 360 000a 4160     	 str r1,[r0,#4]
 361              	 
 362 000c 7047     	 bx lr
 363              	.L36:
 364 000e C046     	 .align 2
 365              	.L35:
 366 0010 FFF3FFFF 	 .word -3073
 368              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 369              	 .align 1
 370              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 371              	 .code 16
 372              	 .thumb_func
 374              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 375 0000 8023     	 mov r3,#128
 376 0002 4268     	 ldr r2,[r0,#4]
 377 0004 5B02     	 lsl r3,r3,#9
 378 0006 1343     	 orr r3,r2
 379 0008 4360     	 str r3,[r0,#4]
 380              	 
 381 000a 7047     	 bx lr
 383              	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 384              	 .align 1
 385              	 .global XMC_CCU8_SLICE_TrapConfig
 386              	 .code 16
 387              	 .thumb_func
 389              	XMC_CCU8_SLICE_TrapConfig:
 390 0000 8023     	 mov r3,#128
 391 0002 10B5     	 push {r4,lr}
 392 0004 4468     	 ldr r4,[r0,#4]
 393 0006 9B02     	 lsl r3,r3,#10
 394 0008 2343     	 orr r3,r4
 395 000a 4360     	 str r3,[r0,#4]
 396 000c 4369     	 ldr r3,[r0,#20]
 397 000e 002A     	 cmp r2,#0
 398 0010 03D0     	 beq .L39
 399 0012 8022     	 mov r2,#128
 400 0014 9203     	 lsl r2,r2,#14
 401 0016 1343     	 orr r3,r2
 402 0018 01E0     	 b .L40
 403              	.L39:
 404 001a 064A     	 ldr r2,.L43
 405 001c 1340     	 and r3,r2
 406              	.L40:
 407 001e 0129     	 cmp r1,#1
 408 0020 03D1     	 bne .L41
 409 0022 8022     	 mov r2,#128
 410 0024 D203     	 lsl r2,r2,#15
 411 0026 1343     	 orr r3,r2
 412 0028 01E0     	 b .L42
 413              	.L41:
 414 002a 034A     	 ldr r2,.L43+4
 415 002c 1340     	 and r3,r2
 416              	.L42:
 417 002e 4361     	 str r3,[r0,#20]
 418              	 
 419 0030 10BD     	 pop {r4,pc}
 420              	.L44:
 421 0032 C046     	 .align 2
 422              	.L43:
 423 0034 FFFFDFFF 	 .word -2097153
 424 0038 FFFFBFFF 	 .word -4194305
 426              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 427              	 .align 1
 428              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 429              	 .code 16
 430              	 .thumb_func
 432              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 433 0000 10B5     	 push {r4,lr}
 434 0002 154B     	 ldr r3,.L46
 435 0004 0468     	 ldr r4,[r0]
 436              	 
 437 0006 1C40     	 and r4,r3
 438 0008 4B78     	 ldrb r3,[r1,#1]
 439 000a 9B04     	 lsl r3,r3,#18
 440 000c 2343     	 orr r3,r4
 441 000e 134C     	 ldr r4,.L46+4
 442 0010 2340     	 and r3,r4
 443 0012 5478     	 ldrb r4,[r2,#1]
 444 0014 2405     	 lsl r4,r4,#20
 445 0016 2343     	 orr r3,r4
 446 0018 114C     	 ldr r4,.L46+8
 447 001a 2340     	 and r3,r4
 448 001c 8C78     	 ldrb r4,[r1,#2]
 449 001e E405     	 lsl r4,r4,#23
 450 0020 2343     	 orr r3,r4
 451 0022 104C     	 ldr r4,.L46+12
 452 0024 2340     	 and r3,r4
 453 0026 9478     	 ldrb r4,[r2,#2]
 454 0028 2406     	 lsl r4,r4,#24
 455 002a 2343     	 orr r3,r4
 456 002c 0E4C     	 ldr r4,.L46+16
 457 002e 2340     	 and r3,r4
 458 0030 CC78     	 ldrb r4,[r1,#3]
 459 0032 0978     	 ldrb r1,[r1]
 460 0034 E406     	 lsl r4,r4,#27
 461 0036 2343     	 orr r3,r4
 462 0038 0C4C     	 ldr r4,.L46+20
 463 003a 0901     	 lsl r1,r1,#4
 464 003c 2340     	 and r3,r4
 465 003e D478     	 ldrb r4,[r2,#3]
 466 0040 1278     	 ldrb r2,[r2]
 467 0042 6407     	 lsl r4,r4,#29
 468 0044 2343     	 orr r3,r4
 469 0046 F024     	 mov r4,#240
 470 0048 A343     	 bic r3,r4
 471 004a 0B43     	 orr r3,r1
 472 004c 0849     	 ldr r1,.L46+24
 473 004e 1202     	 lsl r2,r2,#8
 474 0050 0B40     	 and r3,r1
 475 0052 1343     	 orr r3,r2
 476 0054 0360     	 str r3,[r0]
 477 0056 10BD     	 pop {r4,pc}
 478              	.L47:
 479              	 .align 2
 480              	.L46:
 481 0058 FFFFF3FF 	 .word -786433
 482 005c FFFFCFFF 	 .word -3145729
 483 0060 FFFF7FFF 	 .word -8388609
 484 0064 FFFFFFFE 	 .word -16777217
 485 0068 FFFFFFE7 	 .word -402653185
 486 006c FFFFFF9F 	 .word -1610612737
 487 0070 FFF0FFFF 	 .word -3841
 489              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 490              	 .align 1
 491              	 .global XMC_CCU8_SLICE_ConfigureEvent
 492              	 .code 16
 493              	 .thumb_func
 495              	XMC_CCU8_SLICE_ConfigureEvent:
 496 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 497 0002 0327     	 mov r7,#3
 498 0004 4E1E     	 sub r6,r1,#1
 499 0006 F6B2     	 uxtb r6,r6
 500 0008 7400     	 lsl r4,r6,#1
 501 000a E4B2     	 uxtb r4,r4
 502 000c 251C     	 mov r5,r4
 503 000e 0191     	 str r1,[sp,#4]
 504 0010 391C     	 mov r1,r7
 505 0012 1035     	 add r5,r5,#16
 506 0014 EDB2     	 uxtb r5,r5
 507 0016 A940     	 lsl r1,r1,r5
 508 0018 0368     	 ldr r3,[r0]
 509 001a 1934     	 add r4,r4,#25
 510 001c 8B43     	 bic r3,r1
 511 001e 5178     	 ldrb r1,[r2,#1]
 512 0020 E4B2     	 uxtb r4,r4
 513 0022 A940     	 lsl r1,r1,r5
 514 0024 0125     	 mov r5,#1
 515 0026 0B43     	 orr r3,r1
 516 0028 0199     	 ldr r1,[sp,#4]
 517 002a A740     	 lsl r7,r7,r4
 518 002c 1531     	 add r1,r1,#21
 519 002e C9B2     	 uxtb r1,r1
 520 0030 8D40     	 lsl r5,r5,r1
 521 0032 AB43     	 bic r3,r5
 522 0034 9578     	 ldrb r5,[r2,#2]
 523 0036 B600     	 lsl r6,r6,#2
 524 0038 8D40     	 lsl r5,r5,r1
 525 003a 2B43     	 orr r3,r5
 526 003c D578     	 ldrb r5,[r2,#3]
 527 003e F1B2     	 uxtb r1,r6
 528 0040 A540     	 lsl r5,r5,r4
 529 0042 0F24     	 mov r4,#15
 530 0044 1278     	 ldrb r2,[r2]
 531 0046 8C40     	 lsl r4,r4,r1
 532 0048 8A40     	 lsl r2,r2,r1
 533 004a BB43     	 bic r3,r7
 534 004c 2B43     	 orr r3,r5
 535 004e A343     	 bic r3,r4
 536 0050 1343     	 orr r3,r2
 537 0052 0360     	 str r3,[r0]
 538              	 
 539 0054 F7BD     	 pop {r0,r1,r2,r4,r5,r6,r7,pc}
 541              	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 542              	 .align 1
 543              	 .global XMC_CCU8_SLICE_SetInput
 544              	 .code 16
 545              	 .thumb_func
 547              	XMC_CCU8_SLICE_SetInput:
 548 0000 10B5     	 push {r4,lr}
 549 0002 0F24     	 mov r4,#15
 550 0004 0139     	 sub r1,r1,#1
 551 0006 8900     	 lsl r1,r1,#2
 552 0008 C9B2     	 uxtb r1,r1
 553 000a 8C40     	 lsl r4,r4,r1
 554 000c 8A40     	 lsl r2,r2,r1
 555 000e 0368     	 ldr r3,[r0]
 556              	 
 557 0010 A343     	 bic r3,r4
 558 0012 1343     	 orr r3,r2
 559 0014 0360     	 str r3,[r0]
 560 0016 10BD     	 pop {r4,pc}
 562              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 563              	 .align 1
 564              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 565              	 .code 16
 566              	 .thumb_func
 568              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 569 0000 10B5     	 push {r4,lr}
 570 0002 0224     	 mov r4,#2
 571 0004 231C     	 mov r3,r4
 572 0006 4269     	 ldr r2,[r0,#20]
 573 0008 1343     	 orr r3,r2
 574 000a 0029     	 cmp r1,#0
 575 000c 01D1     	 bne .L52
 576 000e 131C     	 mov r3,r2
 577 0010 A343     	 bic r3,r4
 578              	.L52:
 579 0012 4361     	 str r3,[r0,#20]
 580              	 
 581 0014 10BD     	 pop {r4,pc}
 583              	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 584              	 .align 1
 585              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 586              	 .code 16
 587              	 .thumb_func
 589              	XMC_CCU8_SLICE_SetTimerCountingMode:
 590 0000 10B5     	 push {r4,lr}
 591 0002 0124     	 mov r4,#1
 592 0004 231C     	 mov r3,r4
 593 0006 4269     	 ldr r2,[r0,#20]
 594 0008 1343     	 orr r3,r2
 595 000a 0029     	 cmp r1,#0
 596 000c 01D1     	 bne .L55
 597 000e 131C     	 mov r3,r2
 598 0010 A343     	 bic r3,r4
 599              	.L55:
 600 0012 4361     	 str r3,[r0,#20]
 601              	 
 602 0014 10BD     	 pop {r4,pc}
 604              	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 605              	 .align 1
 606              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 607              	 .code 16
 608              	 .thumb_func
 610              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 611 0000 4163     	 str r1,[r0,#52]
 612              	 
 613 0002 7047     	 bx lr
 615              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 616              	 .align 1
 617              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 618              	 .code 16
 619              	 .thumb_func
 621              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 622 0000 1C31     	 add r1,r1,#28
 623 0002 8900     	 lsl r1,r1,#2
 624 0004 4018     	 add r0,r0,r1
 625 0006 4068     	 ldr r0,[r0,#4]
 626              	 
 627 0008 7047     	 bx lr
 629              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 630              	 .align 1
 631              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 632              	 .code 16
 633              	 .thumb_func
 635              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 636 0000 1023     	 mov r3,#16
 637 0002 30B5     	 push {r4,r5,lr}
 638 0004 4469     	 ldr r4,[r0,#20]
 639 0006 2340     	 and r3,r4
 640 0008 05D1     	 bne .L64
 641 000a 0224     	 mov r4,#2
 642 000c 0129     	 cmp r1,#1
 643 000e 07D1     	 bne .L60
 644 0010 0424     	 mov r4,#4
 645 0012 0223     	 mov r3,#2
 646 0014 04E0     	 b .L60
 647              	.L64:
 648 0016 0424     	 mov r4,#4
 649 0018 0023     	 mov r3,#0
 650 001a 01E0     	 b .L60
 651              	.L61:
 652 001c 0133     	 add r3,r3,#1
 653 001e DBB2     	 uxtb r3,r3
 654              	.L60:
 655 0020 A342     	 cmp r3,r4
 656 0022 0AD0     	 beq .L66
 657 0024 191C     	 mov r1,r3
 658 0026 1C31     	 add r1,r1,#28
 659 0028 8900     	 lsl r1,r1,#2
 660 002a 4118     	 add r1,r0,r1
 661 002c 4D68     	 ldr r5,[r1,#4]
 662 002e ED02     	 lsl r5,r5,#11
 663 0030 F4D5     	 bpl .L61
 664 0032 4B68     	 ldr r3,[r1,#4]
 665 0034 0020     	 mov r0,#0
 666 0036 1360     	 str r3,[r2]
 667 0038 00E0     	 b .L62
 668              	.L66:
 669 003a 0120     	 mov r0,#1
 670              	.L62:
 671              	 
 672 003c 30BD     	 pop {r4,r5,pc}
 674              	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 675              	 .align 1
 676              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 677              	 .code 16
 678              	 .thumb_func
 680              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 681 0000 0029     	 cmp r1,#0
 682 0002 01D1     	 bne .L68
 683 0004 B830     	 add r0,r0,#184
 684 0006 00E0     	 b .L70
 685              	.L68:
 686 0008 BC30     	 add r0,r0,#188
 687              	.L70:
 688 000a 0068     	 ldr r0,[r0]
 689              	 
 690 000c 7047     	 bx lr
 692              	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 693              	 .align 1
 694              	 .global XMC_CCU8_SLICE_EnableDithering
 695              	 .code 16
 696              	 .thumb_func
 698              	XMC_CCU8_SLICE_EnableDithering:
 699 0000 30B5     	 push {r4,r5,lr}
 700 0002 4569     	 ldr r5,[r0,#20]
 701 0004 074C     	 ldr r4,.L80
 702 0006 2C40     	 and r4,r5
 703 0008 0029     	 cmp r1,#0
 704 000a 02D0     	 beq .L72
 705 000c 8021     	 mov r1,#128
 706 000e 8901     	 lsl r1,r1,#6
 707 0010 0C43     	 orr r4,r1
 708              	.L72:
 709 0012 002A     	 cmp r2,#0
 710 0014 02D0     	 beq .L73
 711 0016 8022     	 mov r2,#128
 712 0018 D201     	 lsl r2,r2,#7
 713 001a 1443     	 orr r4,r2
 714              	.L73:
 715 001c 4461     	 str r4,[r0,#20]
 716              	 
 717 001e 0362     	 str r3,[r0,#32]
 718 0020 30BD     	 pop {r4,r5,pc}
 719              	.L81:
 720 0022 C046     	 .align 2
 721              	.L80:
 722 0024 FF9FFFFF 	 .word -24577
 724              	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 725              	 .align 1
 726              	 .global XMC_CCU8_SLICE_SetPrescaler
 727              	 .code 16
 728              	 .thumb_func
 730              	XMC_CCU8_SLICE_SetPrescaler:
 731 0000 826A     	 ldr r2,[r0,#40]
 732 0002 034B     	 ldr r3,.L83
 733              	 
 734 0004 1340     	 and r3,r2
 735 0006 0A02     	 lsl r2,r1,#8
 736 0008 1343     	 orr r3,r2
 737 000a 8362     	 str r3,[r0,#40]
 738 000c 4162     	 str r1,[r0,#36]
 739 000e 7047     	 bx lr
 740              	.L84:
 741              	 .align 2
 742              	.L83:
 743 0010 FFF0FFFF 	 .word -3841
 745              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 746              	 .align 1
 747              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 748              	 .code 16
 749              	 .thumb_func
 751              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 752 0000 0029     	 cmp r1,#0
 753 0002 01D1     	 bne .L86
 754 0004 C263     	 str r2,[r0,#60]
 755 0006 00E0     	 b .L85
 756              	.L86:
 757 0008 4264     	 str r2,[r0,#68]
 758              	.L85:
 759              	 
 760 000a 7047     	 bx lr
 762              	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 763              	 .align 1
 764              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 765              	 .code 16
 766              	 .thumb_func
 768              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 769 0000 0029     	 cmp r1,#0
 770 0002 01D1     	 bne .L89
 771 0004 806B     	 ldr r0,[r0,#56]
 772 0006 00E0     	 b .L91
 773              	.L89:
 774 0008 006C     	 ldr r0,[r0,#64]
 775              	.L91:
 776 000a 80B2     	 uxth r0,r0
 777              	 
 778 000c 7047     	 bx lr
 780              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 781              	 .align 1
 782              	 .global XMC_CCU8_EnableShadowTransfer
 783              	 .code 16
 784              	 .thumb_func
 786              	XMC_CCU8_EnableShadowTransfer:
 787 0000 0369     	 ldr r3,[r0,#16]
 788              	 
 789 0002 1943     	 orr r1,r3
 790 0004 0161     	 str r1,[r0,#16]
 791 0006 7047     	 bx lr
 793              	 .section .text.XMC_CCU8_SLICE_GetEvent,"ax",%progbits
 794              	 .align 1
 795              	 .global XMC_CCU8_SLICE_GetEvent
 796              	 .code 16
 797              	 .thumb_func
 799              	XMC_CCU8_SLICE_GetEvent:
 800 0000 A030     	 add r0,r0,#160
 801 0002 0368     	 ldr r3,[r0]
 802              	 
 803 0004 CB40     	 lsr r3,r3,r1
 804 0006 181C     	 mov r0,r3
 805 0008 0123     	 mov r3,#1
 806 000a 1840     	 and r0,r3
 807 000c 7047     	 bx lr
 809              	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 810              	 .align 1
 811              	 .global XMC_CCU8_SLICE_SetInterruptNode
 812              	 .code 16
 813              	 .thumb_func
 815              	XMC_CCU8_SLICE_SetInterruptNode:
 816 0000 A830     	 add r0,r0,#168
 817 0002 30B5     	 push {r4,r5,lr}
 818 0004 0368     	 ldr r3,[r0]
 819 0006 0929     	 cmp r1,#9
 820 0008 05D8     	 bhi .L96
 821 000a 074C     	 ldr r4,.L97
 822 000c 4D00     	 lsl r5,r1,#1
 823 000e 2C5B     	 ldrh r4,[r5,r4]
 824 0010 064D     	 ldr r5,.L97+4
 825 0012 695C     	 ldrb r1,[r5,r1]
 826 0014 02E0     	 b .L95
 827              	.L96:
 828 0016 C024     	 mov r4,#192
 829 0018 0C21     	 mov r1,#12
 830 001a A401     	 lsl r4,r4,#6
 831              	.L95:
 832 001c 8A40     	 lsl r2,r2,r1
 833 001e A343     	 bic r3,r4
 834 0020 1A43     	 orr r2,r3
 835 0022 0260     	 str r2,[r0]
 836              	 
 837 0024 30BD     	 pop {r4,r5,pc}
 838              	.L98:
 839 0026 C046     	 .align 2
 840              	.L97:
 841 0028 00000000 	 .word .LANCHOR0
 842 002c 00000000 	 .word .LANCHOR1
 844              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 845              	 .align 1
 846              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 847              	 .code 16
 848              	 .thumb_func
 850              	XMC_CCU8_SLICE_SetPassiveLevel:
 851 0000 8369     	 ldr r3,[r0,#24]
 852              	 
 853 0002 8B43     	 bic r3,r1
 854 0004 4908     	 lsr r1,r1,#1
 855 0006 8A40     	 lsl r2,r2,r1
 856 0008 1A43     	 orr r2,r3
 857 000a 8261     	 str r2,[r0,#24]
 858 000c 7047     	 bx lr
 860              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 861              	 .align 1
 862              	 .global XMC_CCU8_SLICE_DeadTimeInit
 863              	 .code 16
 864              	 .thumb_func
 866              	XMC_CCU8_SLICE_DeadTimeInit:
 867 0000 4B68     	 ldr r3,[r1,#4]
 868              	 
 869 0002 0365     	 str r3,[r0,#80]
 870 0004 8B68     	 ldr r3,[r1,#8]
 871 0006 4365     	 str r3,[r0,#84]
 872 0008 0B68     	 ldr r3,[r1]
 873 000a C364     	 str r3,[r0,#76]
 874 000c 7047     	 bx lr
 876              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 877              	 .align 1
 878              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 879              	 .code 16
 880              	 .thumb_func
 882              	XMC_CCU8_SLICE_ConfigureDeadTime:
 883 0000 3F22     	 mov r2,#63
 884 0002 C36C     	 ldr r3,[r0,#76]
 885              	 
 886 0004 9343     	 bic r3,r2
 887 0006 C364     	 str r3,[r0,#76]
 888 0008 C36C     	 ldr r3,[r0,#76]
 889 000a 1943     	 orr r1,r3
 890 000c C164     	 str r1,[r0,#76]
 891 000e 7047     	 bx lr
 893              	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 894              	 .align 1
 895              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 896              	 .code 16
 897              	 .thumb_func
 899              	XMC_CCU8_SLICE_SetDeadTimeValue:
 900 0000 1B02     	 lsl r3,r3,#8
 901 0002 1A43     	 orr r2,r3
 902 0004 0029     	 cmp r1,#0
 903 0006 01D1     	 bne .L103
 904 0008 0265     	 str r2,[r0,#80]
 905 000a 00E0     	 b .L102
 906              	.L103:
 907 000c 4265     	 str r2,[r0,#84]
 908              	.L102:
 909              	 
 910 000e 7047     	 bx lr
 912              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 913              	 .align 1
 914              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 915              	 .code 16
 916              	 .thumb_func
 918              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 919 0000 C022     	 mov r2,#192
 920 0002 C36C     	 ldr r3,[r0,#76]
 921 0004 8901     	 lsl r1,r1,#6
 922 0006 9343     	 bic r3,r2
 923 0008 C364     	 str r3,[r0,#76]
 924 000a C36C     	 ldr r3,[r0,#76]
 925              	 
 926 000c 1943     	 orr r1,r3
 927 000e C164     	 str r1,[r0,#76]
 928 0010 7047     	 bx lr
 930              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 931              	 .align 1
 932              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 933              	 .code 16
 934              	 .thumb_func
 936              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 937 0000 4269     	 ldr r2,[r0,#20]
 938 0002 044B     	 ldr r3,.L107
 939 0004 4907     	 lsl r1,r1,#29
 940 0006 1340     	 and r3,r2
 941 0008 4361     	 str r3,[r0,#20]
 942 000a 4369     	 ldr r3,[r0,#20]
 943              	 
 944 000c 1943     	 orr r1,r3
 945 000e 4161     	 str r1,[r0,#20]
 946 0010 7047     	 bx lr
 947              	.L108:
 948 0012 C046     	 .align 2
 949              	.L107:
 950 0014 FFFFFF9F 	 .word -1610612737
 952              	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
 953              	 .align 1
 954              	 .global XMC_CCU8_lUngateClock
 955              	 .code 16
 956              	 .thumb_func
 958              	XMC_CCU8_lUngateClock:
 959 0000 08B5     	 push {r3,lr}
 960 0002 A023     	 mov r3,#160
 961 0004 DB05     	 lsl r3,r3,#23
 962 0006 9842     	 cmp r0,r3
 963 0008 02D1     	 bne .L109
 964 000a 0220     	 mov r0,#2
 965 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 966              	.L109:
 967              	 
 968 0010 08BD     	 pop {r3,pc}
 970              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 971              	 .align 1
 972              	 .global XMC_CCU8_EnableModule
 973              	 .code 16
 974              	 .thumb_func
 976              	XMC_CCU8_EnableModule:
 977 0000 08B5     	 push {r3,lr}
 978 0002 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 979              	 
 980 0006 08BD     	 pop {r3,pc}
 982              	 .section .text.XMC_CCU8_Init,"ax",%progbits
 983              	 .align 1
 984              	 .global XMC_CCU8_Init
 985              	 .code 16
 986              	 .thumb_func
 988              	XMC_CCU8_Init:
 989 0000 38B5     	 push {r3,r4,r5,lr}
 990 0002 041C     	 mov r4,r0
 991 0004 0D1C     	 mov r5,r1
 992 0006 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 993 000a 2168     	 ldr r1,[r4]
 994 000c 024B     	 ldr r3,.L113
 995              	 
 996 000e 0B40     	 and r3,r1
 997 0010 A903     	 lsl r1,r5,#14
 998 0012 1943     	 orr r1,r3
 999 0014 2160     	 str r1,[r4]
 1000 0016 38BD     	 pop {r3,r4,r5,pc}
 1001              	.L114:
 1002              	 .align 2
 1003              	.L113:
 1004 0018 FF3FFFFF 	 .word -49153
 1006              	 .section .text.XMC_CCU8_lGateClock,"ax",%progbits
 1007              	 .align 1
 1008              	 .global XMC_CCU8_lGateClock
 1009              	 .code 16
 1010              	 .thumb_func
 1012              	XMC_CCU8_lGateClock:
 1013 0000 08B5     	 push {r3,lr}
 1014 0002 A023     	 mov r3,#160
 1015 0004 DB05     	 lsl r3,r3,#23
 1016 0006 9842     	 cmp r0,r3
 1017 0008 02D1     	 bne .L115
 1018 000a 0220     	 mov r0,#2
 1019 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1020              	.L115:
 1021              	 
 1022 0010 08BD     	 pop {r3,pc}
 1024              	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 1025              	 .align 1
 1026              	 .global XMC_CCU8_DisableModule
 1027              	 .code 16
 1028              	 .thumb_func
 1030              	XMC_CCU8_DisableModule:
 1031 0000 08B5     	 push {r3,lr}
 1032 0002 FFF7FEFF 	 bl XMC_CCU8_lGateClock
 1033              	 
 1034 0006 08BD     	 pop {r3,pc}
 1036              	 .section .rodata.CSWTCH.37,"a",%progbits
 1037              	 .align 1
 1038              	 .set .LANCHOR0,.+0
 1041              	CSWTCH.37:
 1042 0000 0300     	 .short 3
 1043 0002 0300     	 .short 3
 1044 0004 0C00     	 .short 12
 1045 0006 0C00     	 .short 12
 1046 0008 3000     	 .short 48
 1047 000a 3000     	 .short 48
 1048 000c 0030     	 .short 12288
 1049 000e 0030     	 .short 12288
 1050 0010 0003     	 .short 768
 1051 0012 000C     	 .short 3072
 1052              	 .section .rodata.CSWTCH.38,"a",%progbits
 1053              	 .set .LANCHOR1,.+0
 1056              	CSWTCH.38:
 1057 0000 00       	 .byte 0
 1058 0001 00       	 .byte 0
 1059 0002 02       	 .byte 2
 1060 0003 02       	 .byte 2
 1061 0004 04       	 .byte 4
 1062 0005 04       	 .byte 4
 1063 0006 0C       	 .byte 12
 1064 0007 0C       	 .byte 12
 1065 0008 08       	 .byte 8
 1066 0009 0A       	 .byte 10
 1067              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:15     .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:20     .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:31     .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:36     .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:69     .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:74     .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:98     .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:103    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:114    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:119    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:130    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:135    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:159    .text.XMC_CCU8_SLICE_StartConfig:00000024 $d
    {standard input}:162    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:167    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:186    .text.XMC_CCU8_SLICE_StopConfig:0000001c $d
    {standard input}:189    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:194    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:206    .text.XMC_CCU8_SLICE_LoadConfig:00000010 $d
    {standard input}:209    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:214    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:225    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:230    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:271    .text.XMC_CCU8_SLICE_ModulationConfig:00000040 $d
    {standard input}:277    .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:282    .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:294    .text.XMC_CCU8_SLICE_CountConfig:00000010 $d
    {standard input}:297    .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:302    .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:314    .text.XMC_CCU8_SLICE_GateConfig:00000010 $d
    {standard input}:317    .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:322    .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:333    .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:338    .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:349    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:354    .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:366    .text.XMC_CCU8_SLICE_DirectionConfig:00000010 $d
    {standard input}:369    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:374    .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:384    .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:389    .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:423    .text.XMC_CCU8_SLICE_TrapConfig:00000034 $d
    {standard input}:427    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:432    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:481    .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000058 $d
    {standard input}:490    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:495    .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:542    .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:547    .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:563    .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:568    .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:584    .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:589    .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:605    .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:610    .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:616    .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:621    .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:630    .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:635    .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:675    .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:680    .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:693    .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:698    .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:722    .text.XMC_CCU8_SLICE_EnableDithering:00000024 $d
    {standard input}:725    .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:730    .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:743    .text.XMC_CCU8_SLICE_SetPrescaler:00000010 $d
    {standard input}:746    .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:751    .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:763    .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:768    .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:781    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:786    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:794    .text.XMC_CCU8_SLICE_GetEvent:00000000 $t
    {standard input}:799    .text.XMC_CCU8_SLICE_GetEvent:00000000 XMC_CCU8_SLICE_GetEvent
    {standard input}:810    .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:815    .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:841    .text.XMC_CCU8_SLICE_SetInterruptNode:00000028 $d
    {standard input}:845    .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:850    .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:861    .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:866    .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:877    .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:882    .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:894    .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:899    .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:913    .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:918    .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:931    .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:936    .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
    {standard input}:950    .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000014 $d
    {standard input}:953    .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:958    .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:971    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:976    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:983    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:988    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:1004   .text.XMC_CCU8_Init:00000018 $d
    {standard input}:1007   .text.XMC_CCU8_lGateClock:00000000 $t
    {standard input}:1012   .text.XMC_CCU8_lGateClock:00000000 XMC_CCU8_lGateClock
    {standard input}:1025   .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:1030   .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:1037   .rodata.CSWTCH.37:00000000 $d
    {standard input}:1041   .rodata.CSWTCH.37:00000000 CSWTCH.37
    {standard input}:1056   .rodata.CSWTCH.38:00000000 CSWTCH.38

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
